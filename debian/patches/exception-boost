Index: b/lwres.cc
===================================================================
--- a/lwres.cc
+++ b/lwres.cc
@@ -181,7 +181,7 @@
     
     return 1;
   }
-  catch(exception &mde) {
+  catch(std::exception &mde) {
     if(::arg().mustDo("log-common-errors"))
       L<<Logger::Notice<<"Unable to parse packet from remote server "<<ip.toString()<<": "<<mde.what()<<endl;
   }
Index: b/pdns_recursor.cc
===================================================================
--- a/pdns_recursor.cc
+++ b/pdns_recursor.cc
@@ -667,7 +667,7 @@
   catch(MOADNSException& e) {
     L<<Logger::Error<<"DNS parser error: "<<dc->d_mdp.d_qname<<", "<<e.what()<<endl;
   }
-  catch(exception& e) {
+  catch(std::exception& e) {
     L<<Logger::Error<<"STL error: "<<e.what()<<endl;
   }
   catch(...) {
@@ -881,7 +881,7 @@
         try {
 	   questionExpand(data, len, qname, sizeof(qname), type);  
         }
-        catch(exception &e)
+        catch(std::exception &e)
         {
            throw MOADNSException(e.what());
         }
@@ -1184,7 +1184,7 @@
     s_rcc.send(answer, &remote);
     command();
   }
-  catch(exception& e) {
+  catch(std::exception& e) {
     L<<Logger::Error<<"Error dealing with control socket request: "<<e.what()<<endl;
   }
   catch(AhuException& ae) {
@@ -1485,7 +1485,7 @@
     SyncRes::s_negcache.clear(); 
     return "ok\n";
   }
-  catch(exception& e) {
+  catch(std::exception& e) {
     L<<Logger::Error<<"Had error reloading zones, keeping original data: "<<e.what()<<endl;
   }
   catch(AhuException& ae) {
@@ -1524,7 +1524,7 @@
 	    string tmp=DNSRR2String(rr);
 	    rr=String2DNSRR(rr.qname, rr.qtype, tmp, rr.ttl);
 	  }
-	  catch(exception &e) {
+	  catch(std::exception &e) {
 	    throw AhuException("Error parsing record '"+rr.qname+"' of type "+rr.qtype.getName()+" in zone '"+headers.first+"' from file '"+headers.second+"': "+e.what());
 	  }
 	  catch(...) {
@@ -1646,7 +1646,7 @@
       }
     }
   }
-  catch(exception& e) {
+  catch(std::exception& e) {
     L<<Logger::Error<<"Retaining current script, error from '"<<fname<<"': "<< e.what() <<endl;
     return string("Retaining current script, error from '"+fname+"': "+string(e.what())+"\n");
   }
@@ -1770,7 +1770,7 @@
     }
     
   }
-  catch(exception &e) {
+  catch(std::exception &e) {
     L<<Logger::Error<<"Failed to load 'lua' script from '"<<::arg()["lua-dns-script"]<<"': "<<e.what()<<endl;
     exit(99);
   }
@@ -2060,7 +2060,7 @@
     L<<Logger::Error<<"Exception: "<<ae.reason<<endl;
     ret=EXIT_FAILURE;
   }
-  catch(exception &e) {
+  catch(std::exception &e) {
     L<<Logger::Error<<"STL Exception: "<<e.what()<<endl;
     ret=EXIT_FAILURE;
   }
Index: b/rcpgenerator.cc
===================================================================
--- a/rcpgenerator.cc
+++ b/rcpgenerator.cc
@@ -461,7 +461,7 @@
   cout<<"Regenerated: '"<<out<<"'\n";
   
 }
-catch(exception& e)
+catch(std::exception& e)
 {
   cerr<<"Fatal: "<<e.what()<<endl;
 }
